<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
    <!--引入数据库配置文件以解耦-->
    <properties resource="db.properties"/>

    <context id="testTables" targetRuntime="MyBatis3">
        <commentGenerator>
            <!-- 是否去除自动生成的注释，true：是；false:否 -->
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>
        <!--数据库连接的信息：驱动类、连接地址、用户名、密码 -->
        <jdbcConnection driverClass="${jdbc.driver}"
                        connectionURL="${jdbc.url}" userId="${jdbc.username}"
                        password="${jdbc.password}">
        </jdbcConnection>
        <!--Oracle数据库的连接信息-->
        <!-- <jdbcConnection driverClass="oracle.jdbc.OracleDriver"
            connectionURL="jdbc:oracle:thin:@127.0.0.1:1521:yycg"
            userId="yycg"
            password="yycg">
        </jdbcConnection> -->

        <!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer，为 true时把JDBC DECIMAL 和
            NUMERIC 类型解析为java.math.BigDecimal -->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="true"/>
        </javaTypeResolver>

        <!-- targetProject:生成PO类的位置 -->
        <javaModelGenerator targetPackage="com.xiong.entity" targetProject="src/main/java">
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="false"/>
            <!-- 从数据库返回的值被清理前后的空格 -->
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>
        <!-- targetProject:mapper映射文件生成的位置 -->
        <sqlMapGenerator targetPackage="mapper" targetProject="src/main/resources">
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="false"/>
        </sqlMapGenerator>
        <!--
        targetPackage：mapper接口生成的位置，遵循MyBatis规范，让mapper.xml
        和mapper.java在同一目录下
         -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.xiong.mapper" targetProject="src/main/java">
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="false"/>
        </javaClientGenerator>
        <!-- 指定数据库表 -->
        <!-- 1、指定所有数据库表 -->
       <!-- <table tableName="%"
               enableCountByExample="false"
               enableUpdateByExample="false"
               enableDeleteByExample="false"
               enableSelectByExample="false"
               enableInsert="false"
               enableDeleteByPrimaryKey="true"
               enableSelectByPrimaryKey="true"
               selectByExampleQueryId="false" ></table>-->
        <!-- 2、指定数据库表，要生成哪些表，就写哪些表，要和数据库中对应，不能写错！ -->
        <!--<table  tableName="student"-->
        <!--enableCountByExample="true"-->
        <!--enableUpdateByExample="false"-->
        <!--&gt;</table>-->
        <!-- <table schema="" tableName="orders"></table>
             <table schema="" tableName="items"></table>
             <table schema="" tableName="orderdetail"></table>
        -->
        <table tableName="user" enableCountByExample="false"
               enableUpdateByExample="false"
               enableDeleteByExample="false"
               enableSelectByExample="false"
               selectByExampleQueryId="false"></table>
        <!-- 3、有些表的字段需要指定java类型
        <table tableName="user">
            <columnOverride column="operate_type" javaType="Integer" />
            <columnOverride column="status" javaType="Integer" />
            <columnOverride column="yn" javaType="Integer" />
            <columnOverride column="invalid" javaType="Integer" />
            <columnOverride column="functiondesc" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <columnOverride column="functiondescnew" javaType="java.lang.String" jdbcType="VARCHAR"/>
        </table> -->

    </context>
</generatorConfiguration>
